name: PHP

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-composer:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: composer validate
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
    - name: Install PHP composer dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest
  build-npm:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '15'
    - name: Cache node_modules
      id: node-module-cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
    - name: Install node dependencies
      if: steps.node-module-cache.outputs.cache-hit != 'true'
      run: yarn install 
  test:
    runs-on: ubuntu-latest
    needs: ['build-composer']
    services: 
      mysql: 
        image: mysql:8.0
        env: 
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: db_testing
        ports:
          - 3306:3306
    steps:
    - uses: actions/checkout@v2
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '7.3'
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install PHP composer dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: php artisan migrate --force
    - name: Run test
      env:
        DB_CONNECTION: mysql
        DB_HOST: localhost
        DB_DATABASE: db_testing
        DB_USERNAME: root
        DB_PASSWORD: password
      run: composer run-script test